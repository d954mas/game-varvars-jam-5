--#IF DEBUG
local COMMON = require "libs.common"
local WORLD = require "world.world"
local DEBUG_INFO = require "debug.debug_info"

local Script = COMMON.new_n28s()

function Script:init()
	gui.set_render_order(COMMON.CONSTANTS.GUI_ORDER.DEBUG)
	self.vh = {
		root = gui.get_node("root"),
		lbl_entities = gui.get_node("lbl_entities"),
		lbl_chunks = gui.get_node("lbl_chunks"),
		lbl_buffer = gui.get_node("lbl_buffer"),
		lbl_chunks_render = gui.get_node("lbl_chunks_render"),
		lbl_render_vertices = gui.get_node("lbl_render_vertices"),
		lbl_player_pos = gui.get_node("lbl_player_pos"),
	}
	self.enabled = WORLD.storage.debug:draw_debug_info_is()
	gui.set_enabled(self.vh.root, self.enabled)
end

function Script:update(dt)
	local draw_debug =  WORLD.storage.debug:draw_debug_info_is() and COMMON.CONSTANTS.TARGET_IS_EDITOR
	if (self.enabled ~= draw_debug) then
		self.enabled = draw_debug
		gui.set_enabled(self.vh.root, self.enabled)
	end
	if (self.enabled) then
		local chunks, chunks_memory = game.debug_get_total_chunks()
		chunks_memory = chunks_memory / 1024 / 1024
		gui.set_text(self.vh.lbl_chunks, string.format("%d/(%.2fMB)", chunks, chunks_memory))

		local buffers, buffers_memory = game.debug_get_total_buffers()
		buffers_memory = buffers_memory / 1024 / 1024
		gui.set_text(self.vh.lbl_buffer, string.format("%d/(%.2fMB)", buffers, buffers_memory))

		local chunks_visible, chunks_hide = game.debug_get_draw_chunks()
		gui.set_text(self.vh.lbl_chunks_render, string.format("%d/%d", chunks_visible, chunks_hide))

		gui.set_text(self.vh.lbl_render_vertices, game.debug_get_draw_chunks_vertices() / 3)

		gui.set_text(self.vh.lbl_entities, DEBUG_INFO.game_entities)

		if (WORLD.game.level_creator and WORLD.game.level_creator.player) then
			local pos = WORLD.game.level_creator.player.position
			gui.set_text(self.vh.lbl_player_pos, string.format("(%.2f %.2f %.2f", pos.x, pos.y, pos.z))
		end

	end

end

COMMON.N28S.register(Script())
--#ENDIF